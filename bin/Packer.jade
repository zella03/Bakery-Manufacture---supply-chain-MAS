agent Packer uses ontology BakeryOntology
    property supervisorName as text
    property packageList as list of PackageOfGoods
    property ordersReadyToPack as list of Order
    property finishedPackages as list of PackageOfGoods
    property timeForPackage as list of PackagePreparation
    
    on create with supervisor as text do
        supervisorName = supervisor
        log "PACKER created with arguments: "+supervisor
        
        activate DelayedPackerReady after "PT3S" as duration
        
        
one shot behavior DelayedPackerReady for agent Packer uses ontology BakeryOntology
    on execute do
        send message inform WorkerReady(aid of agent,"packer","") to supervisorName@
        log "PACKER: "+name of agent+" READY TO WORK"
        activate WaitForListWithPackages

cyclic behaviour WaitForListWithPackages for agent Packer uses ontology BakeryOntology
    on message request ProvidePackingList(pcgList) do
        packageList = pcgList
        log "PACKER list of packages: "+packageList
        activate WaitAndPackOrders
        deactivate this

cyclic behaviour WaitAndPackOrders for agent Packer uses ontology BakeryOntology

    procedure ifPackageFinished do
        packed = false
        
        if length of packageList ≠ 0 do
            for packageToPack in packageList do
                for order in ordersInPackage of packageToPack do
                    if quantity of order ≠ 0 do
                        packed = false
                        break
                    else do
                        packed = true
                if packed do
                    status of packageToPack = "finished"
                    add packageToPack to finishedPackages
                    
                    for pcg in timeForPackage do
                        if packageId of pcg = packageId of packageToPack do
                            prepTime of pcg = (now - prepTime of pcg) as duration
                            break
            
    
    function pckAlreadyPending(pcgId as text) as boolean do
        if length of timeForPackage ≠ 0 do
            for pcg in timeForPackage do
                if packageId of pcg = pcgId do
                    return true
            return false
        else do
            return false
            
    on execute do
        if length of packageList = 0 do
            deactivate this
            
        if length of ordersReadyToPack ≠ 0 do
            for packageToPack in packageList do
                for order in ordersInPackage of packageToPack do
                    for readyToPack in ordersReadyToPack do
                        if good of readyToPack = good of order do
                            
                            if not pckAlreadyPending(packageId of packageToPack) do
                                add PackagePreparation(packageId of packageToPack,now as duration) to timeForPackage
                            
                            quantity of order = quantity of order - 1
                            remove readyToPack from ordersReadyToPack
                            status of packageToPack = "preparing"
                            log "PACKER packed order: "+order+" to package: "+packageId of packageToPack
                            break
                    if length of ordersReadyToPack = 0 do
                        break
                if length of ordersReadyToPack = 0 do
                        break
            
            do ifPackageFinished
            
            if length of finishedPackages ≠ 0 do
                for pcg in finishedPackages do
                    log "PACKER send FINISHED package: "+ packageId of pcg
                    send message inform PackageStatus(pcg) to supervisorName@
                    remove pcg from packageList
                
                log "TIme of packages: "+timeForPackage
                finishedPackages = [] of PackageOfGoods
                  
    on message request GoodToPack(order) do
        log "PACKER got an order to pack"
        add order to ordersReadyToPack